syntax = "proto3";

package orders.v1;

import "validate/validate.proto";

message Order {
  string id = 1 [(validate.rules).string = {uuid: true, ignore_empty: true}];
  repeated Line lines = 2 [(validate.rules).repeated.min_items = 1];
  float total = 3;
  Status status = 4 [(validate.rules).enum.defined_only = true];
}

enum Status {
  STATUS_PAYMENT_UNSPECIFIED = 0;
  STATUS_PAYMENT_SUCCESSFUL = 1;
  STATUS_PAYMENT_PENDING = 2;
  STATUS_PAYMENT_ERROR = 3;
}

message Line {
  string item_id = 1 [(validate.rules).string.uuid = true];
  uint32 quantity = 2 [(validate.rules).uint32.gt = 0];
}

service Orders {
  rpc Create (CreateOrderRequest) returns (CreateOrderResponse);
  rpc List (ListOrderRequest) returns (ListOrderResponse);
  rpc Filter (FilterOrderRequest) returns (FilterOrderResponse);
  rpc Find (FindOrderRequest) returns (FindOrderResponse);
  rpc Update (UpdateOrderRequest) returns (UpdateOrderResponse);
  rpc Delete (DeleteOrderRequest) returns (DeleteOrderResponse);
}

message CreateOrderRequest {
  Order order = 1 [(validate.rules).message.required = true];
}
message CreateOrderResponse {
  Order order = 1;
}

message ListOrderRequest {}

message ListOrderResponse {
  repeated Order orders = 1;
}

message FilterOrderRequest {
  repeated string ids = 1 [(validate.rules).repeated.items.string.uuid = true];
}

message FilterOrderResponse {
  repeated Order orders = 1;
}

message FindOrderRequest {
  string id = 1[(validate.rules).string.uuid = true];
}
message FindOrderResponse {
  Order order = 1;
}

message UpdateOrderRequest {
  Order order = 1;
}

message UpdateOrderResponse {
  Order order = 1;
}

message DeleteOrderRequest {
  string id = 1 [(validate.rules).string.uuid = true];
}
message DeleteOrderResponse {}